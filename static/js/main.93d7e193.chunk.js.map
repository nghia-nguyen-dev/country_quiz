{"version":3,"sources":["assets/svgs/correct.svg","assets/svgs/incorrect.svg","components/Icon.js","components/QuizOptions.js","utils/helpers.js","assets/svgs/traveler.svg","assets/svgs/results.svg","App.js","index.js"],"names":["Icon","markSelection","className","src","correctIcon","incorrectIcon","currentQuestion","state","handleOptionClick","selected","listItems","options","map","option","index","answer","onClick","questions","countries","random","getRandomItem","subject","question","capital","name","country","languages","nativeName","imgSrc","flag","array","ceiling","length","Math","floor","config","App","useState","setCurrentQuestion","setState","counter","setCounter","setSelected","score","setScore","useEffect","listOfCodes","fetch","number","temp","i","randomCode","countryCodes","includes","push","getRandomCodes","reduce","accumulator","current","then","res","json","data","q","handleNextClick","restart","traveler","QuizOptions","disabled","resultsSvg","renderCard","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.93d7e193.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/correct.a0805114.svg\";","export default __webpack_public_path__ + \"static/media/incorrect.d653c612.svg\";","import correctIcon from \"assets/svgs/correct.svg\";\nimport incorrectIcon from \"assets/svgs/incorrect.svg\";\n\nconst Icon = ({ markSelection, className = \"\" }) => {\n\tif (markSelection === \"correct\") {\n\t\treturn <img src={correctIcon} className={className} />;\n\t} else if (markSelection === \"incorrect\") {\n\t\treturn <img src={incorrectIcon} className={className} />;\n\t} else {\n\t\treturn null;\n\t}\n};\n\nexport default Icon;\n","import Icon from \"components/Icon\";\n\nexport default ({ currentQuestion, state, handleOptionClick, selected }) => {\n\tconst listItems = currentQuestion.options?.map((option, index) => {\n\t\tconst letters = [\"A\", \"B\", \"C\", \"D\"];\n\n\t\tconst markSelection = (function () {\n\t\t\tif (state === 2) {\n\t\t\t\tif (option === currentQuestion.answer) {\n\t\t\t\t\treturn \"correct\";\n\t\t\t\t} else if (option === selected) {\n\t\t\t\t\treturn \"incorrect\";\n\t\t\t\t}\n\t\t\t}\n\t\t})();\n\n\t\treturn (\n\t\t\t<li\n\t\t\t\tkey={option}\n\t\t\t\tonClick={() => handleOptionClick(option)}\n\t\t\t\tclassName={`quiz-options__item ${markSelection}`}\n\t\t\t>\n\t\t\t\t<span>{letters[index]}</span>\n\t\t\t\t{option}\n\t\t\t\t<Icon\n\t\t\t\t\tmarkSelection={markSelection}\n\t\t\t\t\tclassName=\"quiz-options__icon\"\n\t\t\t\t/>\n\t\t\t</li>\n\t\t);\n\t});\n\n\treturn <ul className=\"quiz-options\">{listItems}</ul>;\n};\n","import countryCodes from \"data/countryCodes.json\";\n\nexport const questions = [\n\tfunction (countries) {\n\t\tconst random = getRandomItem(countries);\n\t\treturn {\n\t\t\tsubject: \"capital\",\n\t\t\tquestion: `${random.capital} is the capital of`,\n\t\t\tanswer: random.name,\n\t\t\toptions: countries.map((country) => country.name),\n\t\t};\n\t},\n\tfunction (countries) {\n\t\tconst random = getRandomItem(countries);\n\t\treturn {\n\t\t\tsubject: \"language\",\n\t\t\tquestion: `${random.languages[0].nativeName} is the native language of`,\n\t\t\tanswer: random.name,\n\t\t\toptions: countries.map((country) => country.name),\n\t\t};\n\t},\n\tfunction (countries) {\n\t\tconst random = getRandomItem(countries);\n\t\treturn {\n\t\t\tsubject: \"flag\",\n\t\t\tquestion: `This is the flag of`,\n\t\t\tanswer: random.name,\n\t\t\toptions: countries.map((country) => country.name),\n\t\t\timgSrc: random.flag,\n\t\t};\n\t},\n];\n\nexport const getRandomNum = (ceiling) => {\n\treturn Math.floor(Math.random() * ceiling);\n};\n\nexport const getRandomItem = (array) => {\n\treturn array[getRandomNum(array.length)];\n};\n\n// Build an array of random country codes\nexport const getRandomCodes = (number) => {\n\tconst temp = [];\n\n\tfor (let i = 1; i <= number; i++) {\n\t\tlet randomCode;\n\t\tdo {\n\t\t\trandomCode = getRandomItem(countryCodes);\n\t\t} while (temp.includes(randomCode));\n\t\ttemp.push(randomCode);\n\t}\n\n\treturn temp;\n};\n\n// Append country codes to base url\nexport const buildQueryStr = (listOfCodes) => {\n\tconst baseURL = `https://restcountries.eu/rest/v2/alpha?codes=`;\n\treturn listOfCodes.reduce((accumulator, current) => {\n\t\treturn accumulator + `${current};`;\n\t}, baseURL);\n};\n\n// Returns a Q&A object\nexport const generateQuestion = (countries) => {\n\treturn getRandomItem(questions)(countries);\n};\n","export default __webpack_public_path__ + \"static/media/traveler.182b6171.svg\";","export default __webpack_public_path__ + \"static/media/results.d76bfdf8.svg\";","import React, { useState, useEffect } from \"react\";\nimport QuizOptions from \"components/QuizOptions\";\nimport { buildQueryStr, getRandomCodes, generateQuestion } from \"utils/helpers\";\nimport traveler from \"assets/svgs/traveler.svg\";\nimport resultsSvg from \"assets/svgs/results.svg\";\n\nconst config = {\n\toptions: 4,\n\tquestions: 3,\n};\n\nconst App = () => {\n\tconst [currentQuestion, setCurrentQuestion] = useState({});\n\tconst [state, setState] = useState(0);\n\tconst [counter, setCounter] = useState(config.questions);\n\tconst [selected, setSelected] = useState(\"\");\n\tconst [score, setScore] = useState(0);\n\n\tuseEffect(() => {\n\t\tif (state === 1 || state === 0) {\n\t\t\tfetch(buildQueryStr(getRandomCodes(config.options)))\n\t\t\t\t.then((res) => res.json())\n\t\t\t\t.then((data) => generateQuestion(data))\n\t\t\t\t.then((q) => {\n\t\t\t\t\tsetCurrentQuestion(q);\n\t\t\t\t\tsetState(1);\n\t\t\t\t});\n\t\t}\n\t}, [state]);\n\n\tuseEffect(() => {\n\t\tif (selected === currentQuestion.answer) {\n\t\t\tsetScore(score + 1);\n\t\t}\n\t}, [selected]);\n\n\tconst handleNextClick = () => {\n\t\tif (counter === 0) {\n\t\t\tsetState(3);\n\t\t} else {\n\t\t\tsetState(1);\n\t\t}\n\t};\n\n\tconst handleOptionClick = (option) => {\n\t\tif (state === 2) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetState(2);\n\t\tsetCounter(counter - 1);\n\t\tsetSelected(option);\n\t};\n\n\tconst restart = () => {\n\t\tsetState(1);\n\t\tsetScore(0);\n\t\tsetCounter(config.questions);\n\t};\n\n\tconst renderCard = (state) => {\n\t\tswitch (state) {\n\t\t\tcase 0:\n\t\t\t\treturn <div className=\"loading-text\">Loading...</div>;\n\n\t\t\tcase 1:\n\t\t\tcase 2:\n\t\t\t\treturn (\n\t\t\t\t\t<div className=\"card\">\n\t\t\t\t\t\t<div className=\"quiz\">\n\t\t\t\t\t\t\t<img className=\"quiz__traveler\" src={traveler} />\n\t\t\t\t\t\t\t{currentQuestion.subject === \"flag\" ? (\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tclassName=\"quiz__flag\"\n\t\t\t\t\t\t\t\t\tsrc={currentQuestion.imgSrc}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t<h2 className=\"quiz__question\">\n\t\t\t\t\t\t\t\t{currentQuestion.question}\n\t\t\t\t\t\t\t</h2>\n\n\t\t\t\t\t\t\t<QuizOptions\n\t\t\t\t\t\t\t\tcurrentQuestion={currentQuestion}\n\t\t\t\t\t\t\t\tstate={state}\n\t\t\t\t\t\t\t\thandleOptionClick={handleOptionClick}\n\t\t\t\t\t\t\t\tselected={selected}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName={`quiz__btn ${\n\t\t\t\t\t\t\t\t\tstate === 1 ? \"disable\" : \"\"\n\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\tonClick={handleNextClick}\n\t\t\t\t\t\t\t\tdisabled={state === 1 ? true : false}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tNext\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\n\t\t\tcase 3:\n\t\t\t\treturn (\n\t\t\t\t\t<div className=\"card\">\n\t\t\t\t\t\t<div className=\"results\">\n\t\t\t\t\t\t\t<img src={resultsSvg} />\n\t\t\t\t\t\t\t<div className=\"results__content\">\n\t\t\t\t\t\t\t\t<h2>Results</h2>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tYou got{\" \"}\n\t\t\t\t\t\t\t\t\t<span className=\"results__correct\">\n\t\t\t\t\t\t\t\t\t\t{score}\n\t\t\t\t\t\t\t\t\t</span>{\" \"}\n\t\t\t\t\t\t\t\t\tout of{\" \"}\n\t\t\t\t\t\t\t\t\t<span className=\"results__questions\">\n\t\t\t\t\t\t\t\t\t\t{config.questions}\n\t\t\t\t\t\t\t\t\t</span>{\" \"}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<button className=\"results__btn\" onClick={restart}>\n\t\t\t\t\t\t\t\tTry again\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"app\">\n\t\t\t<div className=\"container\">\n\t\t\t\t<h1>Country Quiz</h1>\n\t\t\t\t{renderCard(state)}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/index.css\";\nimport App from \"./App\";\n\nconst MyComponent = () => {\n\treturn (\n\t\t<main>\n\t\t\t<h1 className=\"title\">Hello World</h1>\n\t\t</main>\n\t);\n};\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}