{"version":3,"sources":["components/Option.js","components/QuizOptions.js","utils/helpers.js","assets/svgs/traveler.svg","assets/svgs/results.svg","App.js","index.js"],"names":["Option","letter","option","handleOptionClick","className","onClick","currentQuestion","state","selected","listItems","options","map","index","letters","customOption","answer","questions","countries","random","getRandomItem","subject","question","capital","name","country","languages","nativeName","imgSrc","flag","array","ceiling","length","Math","floor","config","App","useState","setCurrentQuestion","setState","counter","setCounter","setSelected","score","setScore","useEffect","listOfCodes","console","log","fetch","number","temp","i","randomCode","countryCodes","includes","push","getRandomCodes","reduce","accumulator","current","then","res","json","data","q","handleNextClick","restart","src","traveler","QuizOptions","disabled","resultsSvg","renderCard","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.f9a2e2f3.chunk.js","sourcesContent":["export default Option = ({\n\tletter,\n\toption,\n\thandleOptionClick,\n\tclassName = \"\",\n}) => {\n\treturn (\n\t\t<li onClick={() => handleOptionClick(option)} className={className}>\n\t\t\t<span>{letter}</span>\n\t\t\t{option}\n\t\t</li>\n\t);\n};\n","import Option from \"components/Option\";\n\nexport default ({ currentQuestion, state, handleOptionClick, selected }) => {\n\tconst listItems = currentQuestion.options?.map((option, index) => {\n\t\tconst letters = [\"A\", \"B\", \"C\", \"D\"];\n\n\t\tconst customOption = (className) => {\n\t\t\treturn (\n\t\t\t\t<Option\n\t\t\t\t\tkey={option}\n\t\t\t\t\thandleOptionClick={handleOptionClick}\n\t\t\t\t\tletter={letters[index]}\n\t\t\t\t\toption={option}\n\t\t\t\t\tclassName={`quiz-options__item ${className}`}\n\t\t\t\t/>\n\t\t\t);\n\t\t};\n\n\t\t// Return different look/snapshot base on current state\n\t\tif (state === 2) {\n\t\t\tif (option === currentQuestion.answer) {\n\t\t\t\treturn customOption(\"correct\");\n\t\t\t} else if (option === selected) {\n\t\t\t\treturn customOption(\"incorrect\");\n\t\t\t}\n\t\t}\n\n\t\treturn customOption(\"\");\n\t});\n\n\treturn <ul className=\"quiz-options\">{listItems}</ul>;\n};\n","import countryCodes from \"data/countryCodes.json\";\n\nexport const questions = [\n\tfunction (countries) {\n\t\tconst random = getRandomItem(countries);\n\t\treturn {\n\t\t\tsubject: \"capital\",\n\t\t\tquestion: `${random.capital} is the capital of`,\n\t\t\tanswer: random.name,\n\t\t\toptions: countries.map((country) => country.name),\n\t\t};\n\t},\n\tfunction (countries) {\n\t\tconst random = getRandomItem(countries);\n\t\treturn {\n\t\t\tsubject: \"language\",\n\t\t\tquestion: `${random.languages[0].nativeName} is the native language of`,\n\t\t\tanswer: random.name,\n\t\t\toptions: countries.map((country) => country.name),\n\t\t};\n\t},\n\tfunction (countries) {\n\t\tconst random = getRandomItem(countries);\n\t\treturn {\n\t\t\tsubject: \"flag\",\n\t\t\tquestion: `This is the flag of`,\n\t\t\tanswer: random.name,\n\t\t\toptions: countries.map((country) => country.name),\n\t\t\timgSrc: random.flag,\n\t\t};\n\t},\n];\n\nexport const getRandomNum = (ceiling) => {\n\treturn Math.floor(Math.random() * ceiling);\n};\n\nexport const getRandomItem = (array) => {\n\treturn array[getRandomNum(array.length)];\n};\n\n// Build an array of random country codes\nexport const getRandomCodes = (number) => {\n\tconst temp = [];\n\n\tfor (let i = 1; i <= number; i++) {\n\t\tlet randomCode;\n\t\tdo {\n\t\t\trandomCode = getRandomItem(countryCodes);\n\t\t} while (temp.includes(randomCode));\n\t\ttemp.push(randomCode);\n\t}\n\n\treturn temp;\n};\n\n// Append country codes to base url\nexport const buildQueryStr = (listOfCodes) => {\n\tconst baseURL = `https://restcountries.eu/rest/v2/alpha?codes=`;\n\treturn listOfCodes.reduce((accumulator, current) => {\n\t\treturn accumulator + `${current};`;\n\t}, baseURL);\n};\n\n// Returns a Q&A object\nexport const generateQuestion = (countries) => {\n\treturn getRandomItem(questions)(countries);\n};\n","export default __webpack_public_path__ + \"static/media/traveler.182b6171.svg\";","export default __webpack_public_path__ + \"static/media/results.d76bfdf8.svg\";","import React, { useState, useEffect } from \"react\";\nimport QuizOptions from \"components/QuizOptions\";\nimport { buildQueryStr, getRandomCodes, generateQuestion } from \"utils/helpers\";\nimport traveler from \"assets/svgs/traveler.svg\";\nimport resultsSvg from \"assets/svgs/results.svg\";\n\nconst config = {\n\toptions: 4,\n\tquestions: 3,\n};\n\nconst App = () => {\n\tconst [currentQuestion, setCurrentQuestion] = useState({});\n\tconst [state, setState] = useState(0);\n\tconst [counter, setCounter] = useState(config.questions);\n\tconst [selected, setSelected] = useState(\"\");\n\tconst [score, setScore] = useState(0);\n\n\tuseEffect(() => {\n\t\tif (state === 1 || state === 0) {\n\t\t\tconsole.log(`fetching data`);\n\t\t\tfetch(buildQueryStr(getRandomCodes(config.options)))\n\t\t\t\t.then((res) => res.json())\n\t\t\t\t.then((data) => generateQuestion(data))\n\t\t\t\t.then((q) => {\n\t\t\t\t\tsetCurrentQuestion(q);\n\t\t\t\t\tsetState(1);\n\t\t\t\t});\n\t\t}\n\t}, [state]);\n\n\tuseEffect(() => {\n\t\tif (selected === currentQuestion.answer) {\n\t\t\tsetScore(score + 1);\n\t\t}\n\t}, [selected]);\n\n\tconst handleNextClick = () => {\n\t\tif (counter === 0) {\n\t\t\tsetState(3);\n\t\t} else {\n\t\t\tsetState(1);\n\t\t}\n\t};\n\n\tconst handleOptionClick = (option) => {\n\t\tif (state === 2) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetState(2);\n\t\tsetCounter(counter - 1);\n\t\tsetSelected(option);\n\t};\n\n\tconst restart = () => {\n\t\tsetState(0);\n\t\tsetScore(0);\n\t\tsetCounter(config.questions);\n\t};\n\n\tconst renderCard = (state) => {\n\t\tswitch (state) {\n\t\t\tcase 0:\n\t\t\t\treturn <div className=\"loading-text\">Loading...</div>;\n\n\t\t\tcase 1:\n\t\t\tcase 2:\n\t\t\t\treturn (\n\t\t\t\t\t<div className=\"card\">\n\t\t\t\t\t\t<div className=\"quiz\">\n\t\t\t\t\t\t\t<img className=\"quiz__traveler\" src={traveler} />\n\t\t\t\t\t\t\t{currentQuestion.subject === \"flag\" ? (\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tclassName=\"quiz__flag\"\n\t\t\t\t\t\t\t\t\tsrc={currentQuestion.imgSrc}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t<h2 className=\"quiz__question\">\n\t\t\t\t\t\t\t\t{currentQuestion.question}\n\t\t\t\t\t\t\t</h2>\n\n\t\t\t\t\t\t\t<QuizOptions\n\t\t\t\t\t\t\t\tcurrentQuestion={currentQuestion}\n\t\t\t\t\t\t\t\tstate={state}\n\t\t\t\t\t\t\t\thandleOptionClick={handleOptionClick}\n\t\t\t\t\t\t\t\tselected={selected}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName={`quiz__btn ${\n\t\t\t\t\t\t\t\t\tstate === 1 ? \"disable\" : \"\"\n\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\tonClick={handleNextClick}\n\t\t\t\t\t\t\t\tdisabled={state === 1 ? true : false}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tNext\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\n\t\t\tcase 3:\n\t\t\t\treturn (\n\t\t\t\t\t<div className=\"card\">\n\t\t\t\t\t\t<div className=\"results\">\n\t\t\t\t\t\t\t<img src={resultsSvg} />\n\t\t\t\t\t\t\t<div className=\"results__content\">\n\t\t\t\t\t\t\t\t<h2>Results</h2>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tYou got{\" \"}\n\t\t\t\t\t\t\t\t\t<span className=\"results__correct\">\n\t\t\t\t\t\t\t\t\t\t{score}\n\t\t\t\t\t\t\t\t\t</span>{\" \"}\n\t\t\t\t\t\t\t\t\tout of{\" \"}\n\t\t\t\t\t\t\t\t\t<span className=\"results__questions\">\n\t\t\t\t\t\t\t\t\t\t{config.questions}\n\t\t\t\t\t\t\t\t\t</span>{\" \"}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<button className=\"results__btn\" onClick={restart}>\n\t\t\t\t\t\t\t\tTry again\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"app\">\n\t\t\t<div className=\"container\">\n\t\t\t\t<h1>Country Quiz</h1>\n\t\t\t\t{renderCard(state)}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/index.css\";\nimport App from \"./App\";\n\nconst MyComponent = () => {\n\treturn (\n\t\t<main>\n\t\t\t<h1 className=\"title\">Hello World</h1>\n\t\t</main>\n\t);\n};\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}